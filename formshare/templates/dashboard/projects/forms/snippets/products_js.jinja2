let active_tasks = [{% for product in products %}{% for output in product.outputs %}{% if output.status == -1 %}'{{ output.celery_taskid }}',{% endif %}{% endfor %}{% endfor %}];
let finished_tasks = [];
let sse2 = $.SSE('{{ request.route_url('form_sse', userid=projectDetails.owner, projcode=projectDetails.project_code, formid=formDetails.form_id) }}', {
    onMessage: function(e){
        var lines = e.data.split("\n");
        for (var a_line in lines) {
            let message = null;
            try
            {
                message = JSON.parse(lines[a_line])['message'];
            }
            catch(err)
            {
                console.log(lines[a_line])
            }
            if (message !== null)
            {
                message = JSON.parse(message);
                if (typeof message === 'object')
                {
                    let task_id = message['task'];
                    let task_status = message['status'];
                    if ((task_status === "success") || (task_status === "failure")) {
                        if (active_tasks.indexOf(task_id) >= 0) {
                            finished_tasks.push(task_id);
                            if (active_tasks.length === finished_tasks.length)
                                sse2.stop();
                            $('#feed_element_' + task_id).load('{{ request.url }} #feed_element_' + task_id,function(){
                                product_buttons()
                            });
                        }
                    }
                    else {
                        $("#sse_" + task_id).text(task_status);
                    }

                }
                else
                {
                    console.log(message)
                }
            }
        }
    }
});
sse2.start();

let $element2 = $('.sse-message');
function fadeInOut2 () {
    $element2.fadeIn(1000, function () {
        $element2.fadeOut(1500, function () {
            $element2.fadeIn(1500, function () {
                setTimeout(fadeInOut2, 500);
            });
        });
    });
}
fadeInOut2();

$('.cancel-task').click(function () {
    var action_url = $( this ).attr('urn');
    swal({
            title: "{{ _('Cancel the process') }}",
            text: "{{ _('Are you sure that you want to cancel this process') }}",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "{{ _('Yes, stop the process') }}",
            cancelButtonText: "{{ _('Oops!, cancel!') }}",
            closeOnConfirm: true,
            closeOnCancel: true },
        function (isConfirm) {
            if (isConfirm) {
                var form = document.createElement('form');
                form.setAttribute('method', 'post');
                form.setAttribute('action', action_url);
                form.style.display = 'hidden';

                var i = document.createElement("input"); //input element, text
                i.setAttribute('type',"text");
                i.setAttribute('name',"csrf_token");
                i.setAttribute('value','{{ request.session.get_csrf_token() }}');
                form.appendChild(i);

                document.body.appendChild(form);
                form.submit();
            }
        });
});